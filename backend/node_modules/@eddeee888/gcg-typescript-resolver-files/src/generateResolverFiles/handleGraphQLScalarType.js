"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.handleGraphQLScalarType = void 0;
const utils_1 = require("../utils");
const graphQLScalarType = 'GraphQLScalarType';
const handleGraphQLScalarType = ({ fieldFilePath, resolverName, normalizedResolverName, moduleName }, { result, config: { resolverGeneration, emitLegacyCommonJSImports } }) => {
    if (!resolverGeneration.scalar) {
        return;
    }
    const variableStatement = `export const ${resolverName} = new GraphQLScalarType({
    name: '${resolverName}',
    description: '${resolverName} description',
    serialize: (value) => {
      /* Implement logic to turn the returned value from resolvers to a value that can be sent to clients */
    },
    parseValue: (value) => {
      /* Implement logic to parse input that was sent to the server as variables */
    },
    parseLiteral: (ast) => {
      /* Implement logic to parse input that was sent to the server as literal values (string, number, or boolean) */
    },
  });`;
    result.files[fieldFilePath] = {
        __filetype: 'generalResolver',
        content: `
    ${(0, utils_1.printImportLine)({
            isTypeImport: false,
            module: 'graphql',
            moduleType: 'module',
            namedImports: [graphQLScalarType],
            emitLegacyCommonJSImports,
        })}
    ${variableStatement}`,
        mainImportIdentifier: resolverName,
        meta: {
            moduleName,
            normalizedResolverName,
            variableStatement,
            resolverTypeString: null,
        },
    };
};
exports.handleGraphQLScalarType = handleGraphQLScalarType;
//# sourceMappingURL=handleGraphQLScalarType.js.map